data.frame(time=time,var="Base Case  ",value=undiag[obs]),
data.frame(time=time,var="Upper Bound  ",value=undiagUB[obs])
)
cols <- hue_pal()(3)[-1]
p <- ggplot(d1,aes(x=time,y=value,linetype=var))  +
geom_line() +
geom_point(aes(color=var)) +
theme_bw() +
scale_color_manual(name="",values=cols) +
scale_linetype(name="") +
xlab("Time") + ylab("# Undiagnosed HIV+") + ylim(c(0,750)) +
theme(legend.position="bottom")
print(p)
by(d1$value,d1$var,summary)
incidence <- mean(y[obs])
incidence
k <- 10000
m <- max(ti)
s <- seq(from=0,to=m,length.out=k)
l <- length(ti)
v <- sum(sapply(s,function(x) (sum(1-qi(x)))))
v * 4 * incidence / (k/m)
v <- sum(sapply(s,function(x) (sum(1-qUB(x)))))
v * 4 * incidence / (k/m)
mean(y,na.rm=TRUE) * mean(ti/2)*12/4
mean(y,na.rm=TRUE) * mean(ti/2)*12/4
mean(y,na.rm=TRUE) * mean(ti/2)*12/3
mean(ti/2)
ti <- with(msm,sort(infPeriod[!is.na(infPeriod) & infPeriod>0]))
mean(ti/2)
str(msm)
names(str(msm))
class(str(msm))
?str
ls.str(msm)
ls.str(msm) -> test
class(test)
names(test)
test
str(args)
str(ls)
args(ls)
args(args)
str(args)
infPeriod = msm$infPeriod
table(infPeriod, usena='ifany')
?table
table(infPeriod, useNA='ifany')
summary(infPeriod)
class(summary(infPeriod))
as.data.frame(summary(infPeriod))
class(summary(infPeriod))
summary(infPeriod)/5
data.frame(summary(infPeriod))
data.frame(c(summary(infPeriod)))
data.frame(c(summary(infPeriod)))->test
test
t(test)
colnames(test)
colnames(t(test))
bygroup=NULL
if (is.null(bygroup)) bygroup = rep('All', length(infPeriod))
head(bygroup)
?tapply
tapply(infPeriod, bygroup, FUN=summary)
test = data.frame(i=infPeriod,b=bygroup)
?ddply
library(reshape)
?ddply
library(ggplot2)
?ddply
?dply
library(plyr)
?ddply
ddply(test, .(b), .fun=summary)
df = data.frame(infPeriod=infPeriod, group=bygroup)
head(df)
ddply(df, .(group), function(x) summary(x$infPeriod))
df <- data.frame(infPeriod=infPeriod, Group=bygroup)
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod))
sumstats
sumstats <- transform(sumstats,
`Percent Missing`=`NA's`/length(infPeriod))
sumstats
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod))
sumstats
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/length(infPeriod),1)
sumstats
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/length(infPeriod),2)
sumstats
bygroup=msm$yearDX
bygroup=msm$yearDx
head(bygroup)
df <- data.frame(infPeriod=infPeriod, Group=bygroup)
oneway.test(infPeriod~bygroup,data=df)
oneway.test(infPeriod~bygroup,data=df)->test
test
r = list(stats=sumstats)
r[[1]]
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) bygroup = rep('All', length(infPeriod))
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=bygroup)
# Summarize
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/length(infPeriod),2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~bygroup,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod)
#' Summarize infection period data
#' @param infPeriod Vector of times from last negative test to diagnosis
#' @param bygroup Optional vector defining subgroups
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod))
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/length(infPeriod),2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod)
summarize_infPeriod(msm$infPeriod, msm$yearDx)
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/length(infPeriod),2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod, msm$yearDx)
summarize_infPeriod(msm$infPeriod, msm$yearDx) -> test
test[[1]]
test[[2]]
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod), N=length(x))
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod), N=length(x))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod)
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) summary(x$infPeriod), freq=length(x))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod)
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) c(summary(x$infPeriod), freq=length(x))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) c(summary(x$infPeriod), freq=length(x)))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod)
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) c(summary(x$infPeriod), freq=length(x)))
browser()
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod)
sumstats
df
Group
head(df)
sumstats <- ddply(df, .(Group), function(x) c(summary(x$infPeriod), N=nrow(x)))
sumstats
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
sumstats
summarize(msm$infPeriod, bygroup=msm$yearDx)
head(msm$yearDx)
summarize_infPeriod(msm$infPeriod, bygroup=msm$yearDx)
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) c(summary(x$infPeriod), N=nrow(x)))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod, bygroup=msm$yearDx)
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) c(summary(x$infPeriod), N=nrow(x)))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r[[2]] = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod, bygroup=msm$yearDx)
summarize_infPeriod(msm$infPeriod, bygroup=msm$yearDx)
summarize_infPeriod(msm$infPeriod, bygroup=msm$race2)
ggplot(aes(y=infPeriod,x=factor(racel)),data=msm) +
geom_jitter(alpha=.25) +
geom_boxplot(color="darkred",fill=NA,outlier.size=0)
lastTest <- na.omit(msm$infPeriod)
dst <- dexp
fit <- fitdistr(lastTest, "exponential")
xFit <- seq(from = 0, to = max(lastTest), length.out = 500) # Range of infPeriod
yFit <- do.call(dst, c(as.list(fit$estimate), list(x = xFit)))
ggplot() + geom_density(aes(x = lastTest)) + geom_line(aes(x = xFit, y = yFit),
color = "red")
s <- 1:300 / 10
a <- data.frame(a=ecdf(msm[[1]])(s),b=ecdf(msm[[3]])(s),
c=ecdf(msm[[4]])(s),d=ecdf(msm[[5]])(s))
m1 <- melt(a)
ggplot(aes(x=rep(s,4),y=value,color=variable),data=m1) +
stat_function(fun = pweibull, colour = "grey50", arg = list(shape=2.516,scale=1/0.086), size=2) +
annotate("text", x = 17, y = .15, label = "Wiebull(shape=2.516,scale=11.628)",color="grey50") +
geom_step() +
xlim(c(0,30)) +
theme_bw() +
scale_color_discrete("Report",labels=c("Combined","EHARS","PCRS","HIS")) +
xlab("Years since last negative HIV test") +
ylab("Proportion without AIDS")
colnames(msm[c(1,3,4,5)])
s <- 1:300 / 10
a <- data.frame(a=ecdf(msm[["infPeriod"]])(s),b=ecdf(msm[["lagHIV_LastNegEhars"]])(s),
c=ecdf(msm[["lagHIV_LastNegPCRSrpt"]])(s),d=ecdf(msm[["lagHIV_HISNeg"]])(s))
m1 <- melt(a)
ggplot(aes(x=rep(s,4),y=value,color=variable),data=m1) +
stat_function(fun = pweibull, colour = "grey50", arg = list(shape=2.516,scale=1/0.086), size=2) +
annotate("text", x = 17, y = .15, label = "Wiebull(shape=2.516,scale=11.628)",color="grey50") +
geom_step() +
xlim(c(0,30)) +
theme_bw() +
scale_color_discrete("Report",labels=c("Combined","EHARS","PCRS","HIS")) +
xlab("Years since last negative HIV test") +
ylab("Proportion without AIDS")
s <- 1:300 / 10
a <- data.frame(a=ecdf(msm[["infPeriod"]])(s),b=ecdf(msm[["lagHIV_LastNegEhars"]])(s),
c=ecdf(msm[["lagHIV_LastNegPCRSrpt"]])(s),d=ecdf(msm[["lagHIV_HISNeg"]])(s))
m1 <- melt(a)
ggplot(aes(x=rep(s,4),y=value,color=variable),data=m1) +
stat_function(fun = pweibull, colour = "grey50", arg = list(shape=2.516,scale=1/0.086), size=2) +
annotate("text", x = 17, y = .15, label = "Wiebull(shape=2.516,scale=11.628)",color="grey50") +
geom_step() +
xlim(c(0,30)) +
theme_bw() +
scale_color_discrete("Report",labels=c("Combined","EHARS","PCRS","HIS")) +
xlab("Years since last negative HIV test") +
ylab("Proportion without AIDS")
head(m1)
msm1 <- msm[msm$aidsAtDx & msm$timeDx>=2010,]
msm1$infPeriodHe <- msm1$infPeriod # Since we're using PCRS
msm1$infPeriodUB <- with(msm1,ifelse(is.na(infPeriod),hiv_age_yrs-15,infPeriodHe))
mean(msm1$hiv_age_yrs)
msm1 <- msm1[c("infPeriodHe","infPeriodUB","lagHIV_LastNegEhars","lagHIV_LastNegPCRSrpt","lagHIV_HISNeg")]
msm1[3:5] <- msm1[c(3:5)]/365
plot(msm1,xlim=c(0,30),ylim=c(0,30))
cor(msm1,use="pair")
nrow(msm1)
summary(msm1)
m <- melt(msm1[-2])
# Plot of density of infPeriod vs EHARS vs HIS vs a Weibull...
ggplot(aes(x=value,color=variable),data=m) +
stat_function(fun = dweibull, colour = "grey50", arg = list(shape=2.516,scale=1/0.086), size=2) +
annotate("text", x = 17, y = .092, label = "Wiebull(shape=2.516,scale=11.628)",color="grey50") +
geom_density(adjust=2.25,na.rm=TRUE) +
xlim(c(0,30)) +
theme_bw() +
scale_color_discrete("Report",labels=c("Combined","EHARS","PCRS","HIS")) +
xlab("Years since last negative HIV test") +
ylab("Density")
msm1 <- msm[msm$aidsAtDx & msm$timeDx>=2010,]
msm1$infPeriodHe <- msm1$infPeriod # Since we're using PCRS
msm1$infPeriodUB <- with(msm1,ifelse(is.na(infPeriod),hiv_age_yrs-15,infPeriodHe))
mean(msm1$hiv_age_yrs)
msm1 <- msm1[c("infPeriodHe","infPeriodUB","lagHIV_LastNegEhars","lagHIV_LastNegPCRSrpt","lagHIV_HISNeg")]
msm1[3:5] <- msm1[c(3:5)]/365
plot(msm1,xlim=c(0,30),ylim=c(0,30))
cor(msm1,use="pair")
nrow(msm1)
summary(msm1)
m <- melt(msm1[-2])
# Plot of density of infPeriod vs EHARS vs HIS vs a Weibull...
ggplot(aes(x=value,color=variable),data=m) +
stat_function(fun = dweibull, colour = "grey50", arg = list(shape=2.516,scale=1/0.086), size=2) +
annotate("text", x = 17, y = .092, label = "Wiebull(shape=2.516,scale=11.628)",color="grey50") +
geom_density(adjust=2.25,na.rm=TRUE) +
xlim(c(0,30)) +
theme_bw() +
scale_color_discrete("Report",labels=c("Combined","EHARS","PCRS","HIS")) +
xlab("Years since last negative HIV test") +
ylab("Density")
summarize_infPeriod(msm$infPeriod, bygroup=msm$yearDx)
getwd()
dir()
render('updates/2014-05-30.Rmd', 'pdf_document')
library(markdown)
render('updates/2014-05-30.Rmd', 'pdf_document')
library(rmarkdown)
install.packages(rmarkdown)
install.packages("rmarkdown")
help(package=markdown)
intLength <- .25
pid <- estimateProbDist(infPeriod=msm$infPeriod,intLength=intLength)
y <- c(rep(NA,100),table(msm$timeDx))
rm(list=ls())
setwd('/Users/jeanette/Dropbox/School/PhD/HIV_WA')
source("analysis/data-cleaning_JKB.R")
library(ggplot2)
library(reshape2)
library(MASS)
library(plyr)
#' Summarize infection period data
#' @param infPeriod Vector of times from last negative test to diagnosis
#' @param bygroup Optional vector defining subgroups
summarize_infPeriod = function(
infPeriod,
bygroup=NULL
) {
# Group indicator
if (is.null(bygroup)) group = rep('All', length(infPeriod)) else group=bygroup
# Create data frame
df <- data.frame(infPeriod=infPeriod, Group=group)
# Summarize
sumstats <- ddply(df, .(Group), function(x) c(summary(x$infPeriod), N=nrow(x)))
sumstats[,"Percent Missing"] = round(100*sumstats[,"NA's"]/sumstats[,"N"],2)
# Return object
r = list(stats=sumstats)
# Oneway test for mean infPeriod across groups
if (!is.null(bygroup)) {
r$oneway = oneway.test(infPeriod~Group,data=df)
}
return(r)
}
summarize_infPeriod(msm$infPeriod)
lib1='Hmisc'
library(lib1)
lib1(eval(lib1))
library(eval(lib1))
eval(lib1)
eval(parse(text=lib1))
library(eval(parse(text=lib1)))
parse(text=lib1)
parse(text=paste(lib1))
getwd()
workd=getwd()
f='hello'
cat('Sourcing', f, '...\n')
#' Summarize infection period data
#' @param workd Working directory full file path
#' @param datafile Path to data, either full or from the workd
#' @param source_these Vector of paths to other files to source, either full or from the workd
file_setup = function(wd, s) {
cat('Loading libraries...\n')
# Load libraries - eventually, make these dependencies of the HIBBackCalc package?
library(HIVBackCalc)
library(reshape2)
library(ggplot2)
library(scales)
library(Hmisc)
# Working directory
setwd(workd)
# Source files
for (f in source_these) {
cat('Sourcing', f, '...\n')
source(f)
}
}
library(LearnBayes)
library(xtable)
library(knitr)
library(HSAUR)
library(foreign)
library(arm)
library(INLA)
setwd('/Users/jeanette/Dropbox/School/PhD/BIOST Bayes')
tread <- read.csv('treadmill.csv', header=TRUE)
head(tread)
tread <- read.csv('treadmill.csv', header=FALSE)
head(tread)
?read.csv
tread <- read.csv('treadmill.csv',
col.names=c('id','time','VO2','heartrate','age','height','weight'))
head(tread)
str(tread)
hist(tread$VO2)
getwd()
library(knitr)
?purl
?knit2pdf
?purl
