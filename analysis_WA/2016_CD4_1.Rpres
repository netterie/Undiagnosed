Integrating CD4 data into undiagnosed estimates
========================================================
author: Martina Morris & Jeanette Birnbaum
date: 
autosize: true
transition: fade
width: 1920
height: 1080


```{r, include=FALSE, echo=FALSE, cache=FALSE}
# Reminder: slide types are alert, prompt, section and sub-section
#############################################################
# SETUP
#############################################################
rm(list=ls())
# TEMPORARY: SOURCE FUNCTIONS
source('/Users/jeanette/Dropbox/School/PhD/HIV_WA/HIVBackCalc/R/internal_fxns.R')

# Change year min and max
year_min <- 2005
year_max <- 2014

# Load libraries, data and data-cleaning file
# Eventually this function should return the cleaned dataset,
# but data-cleaning has the name hardcoded as msm and I'm not
# going to generalize that right now
setup_hivbackcalc(workd='/Users/jeanette/Dropbox/School/PhD/HIV_WA',
                  datafile='data/wa_backcalc_data_201602.csv',
                  source_these='analysis_WA/format_data.R',
                  load_package=TRUE,
                  packagefile='HIVBackCalc/R/internal_fxns.R')

library(xtable)
library(gridExtra)
library(vcd)
library(plyr)

#############################################################
# KNITR
#############################################################

library(knitr)
knit_hooks$set(inline = function(x) {
                    prettyNum(round(x,2), big.mark=",")
                  })
# set global chunk options
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', 
               fig.show='hold', concordance=TRUE, external=TRUE,
               tidy=TRUE, size='footnotesize', verbose=TRUE)
options(formatR.arrow=TRUE,width=80,digits=7)

read_chunk(file.path(workd,'analysis_WA/run_main.R'))
#read_chunk(file.path(workd,'analysis_WA/describe_data.R'))

#############################################################
# MOSAIC PLOT CODE
# adapted from 
# https://gist.github.com/docsteveharris/4e12c86ac2dd96bfa2dd5cbf13ba3e53
# ggMMplot(dataf$infBreaks, dataf$cd4cat, toplabs=c('Test%', '50%', '20%', '10%'))
#############################################################

ggMMplot <- function(var1, var2, palette="YlOrRd", toplabs){
  require(ggplot2)

  levVar1 <- length(levels(var1))
  levVar2 <- length(levels(var2))

  jointTable <- prop.table(table(var1, var2))
  plotData <- as.data.frame(jointTable)
  plotData$marginVar1 <- prop.table(table(var1))
  plotData$marginVar2 <- prop.table(table(var2))
  plotData$var2Height <- plotData$Freq / plotData$marginVar1
  plotData$var1Center <- c(0, cumsum(plotData$marginVar1)[1:levVar1 -1]) +
    plotData$marginVar1 / 2

  # Define label positions on LEFT (y-axis)
  ylabData <- plotData[plotData$var1==levels(plotData$var1)[1],]
  dd <- (y=c(0, cumsum(ylabData$var2Height)))
  ylabData$ylabCenter <- sapply(1:(length(dd)-1), function(x) dd[x] + (dd[x+1] - dd[x])/2 )

  # Define label positions on the BOTTOM (x-axis)
  xlabData <- plotData[plotData$var2==levels(plotData$var2)[1],]
  dd <- (x=c(0, cumsum(xlabData$marginVar1)))
  xlabData$xlabCenter <- sapply(1:(length(dd)-1), function(x) dd[x] + (dd[x+1] - dd[x])/2 )

  # Define label positions for the very TOP
  toplabData <- ddply(plotData, .(var1), summarise, 
                      x=max(var1Center), y=1.05)
  toplabData$label <- toplabs

  ggplot(plotData, aes(var1Center, var2Height)) +
    geom_bar(stat = "identity", aes(width = marginVar1, fill = var2), col = "White") +
    scale_fill_brewer(type="seq", palette=palette, guide=FALSE) +
    # xlabels
    geom_text(data=xlabData,
              aes(label = as.character(var1), x = xlabCenter, y = -0.05),
              vjust="inward") +
    # ylabels
    geom_text(data=ylabData, 
              aes(label = as.character(var2), y = ylabCenter, x = -0.05),
                  vjust="top", angle=90) +
    # toplabels
    geom_text(data=toplabData, aes(label=label, x=x, y=y)) +
    
    xlab("") + scale_x_discrete(labels=NULL) +
    ylab("") + scale_y_discrete(labels=NULL) +
    theme_minimal() +
    theme(plot.margin=margin(rep(20,4)))
}

#############################################################
# MORE DATA TRANSFORMATIONS
#############################################################

dataf <- transform(dataf, 
                  everHad=ifelse(is.na(everHadNegTest), 'Missing', 
                                 ifelse(everHadNegTest, 'Tested', 'Never Tested')))
dataf <- transform(dataf, 
                  everHad=factor(everHad, levels=c('Tested', 'Never Tested', 'Missing'), label=c('Tested', 'Never Tested', 'Missing')))


cd4breaks <- c(0,200,350,500,2000)
windowbreaks <- c(0,3,8,16,18)

dataf <- within(dataf, {
            # Non-missing testing history
            hasTestHist <- !is.na(everHadNegTest)
            # CD4 measured within 30d
            cd4within30 <- hasTestHist & !is.na(cd4_days) & cd4_days<=30 &
                !is.na(firstcd4cnt)
            # Categories
            cd4cat=cut(firstcd4cnt, breaks=cd4breaks,
                   include.lowest=TRUE, right=FALSE)
            # Add "yrs" to the categories
            # Windows
            infBreaks=cut(infPeriod, breaks=windowbreaks,
                          include.lowest=TRUE, right=FALSE)
            # Windows with 'yrs'
            infBreaksYrs=ifelse(is.na(infBreaks), infBreaks,
                                paste(infBreaks,'yrs'))
          }) 

# with(subset(dataf, cd4within30==TRUE), table(cd4cat, infBreaks))
# 86+42+41+20+46+58=293 potential cases...

#############################################################
# CD4 CODE
#############################################################

# Define our literature-based median times to infection by CD4 bin
cd4meds <- data.frame(cd4lower=c(500,350,200),
                      cd4upper=c(2000, 500, 350),
                      medWindow=c(1.5, 4, 8))

#*********************
# Assign medians

# Start with 1/2 of infPeriod, which is just the Base Case.
# Update to CD4-based median if indicated by infPeriod (infection window)
dataf <- transform(dataf, medWindows=infPeriod/2, impacted=0)

for (i in 1:nrow(cd4meds)) {
  dataf <- transform(dataf, temp=cd4within30 &
                                   firstcd4cnt>=cd4meds[i,'cd4lower'] &
                                   firstcd4cnt<cd4meds[i, 'cd4upper'] &
                                   infPeriod>=2*cd4meds[i, 'medWindow'])
    dataf <- transform(dataf, impacted=ifelse(temp==1,1,impacted))
    dataf <- within(dataf, {
                        medWindows[hasTestHist & cd4within30 &
                                   firstcd4cnt>=cd4meds[i,'cd4lower'] &
                                   firstcd4cnt<cd4meds[i, 'cd4upper'] &
                                   infPeriod>=2*cd4meds[i, 'medWindow']] <- 
                                   cd4meds[i,'medWindow']
              })
}

# Was expecting 296 cases impacted; need to find the 6
with(dataf, sum(medWindows!=infPeriod/2, na.rm=TRUE))
# Ok
with(dataf, table(mode2, impacted))

#*********************
# TIDs

    cd4real <- estimateTID(dataf$infPeriod,
                           intLength=0.25, 
                           cases=c('base_case_alt','cd4_case'),
                           medWindows=dataf$medWindows,
                           infPeriodOrig=dataf$infPeriod)
    cd4real.MSM <- estimateTID(subset(dataf, mode2=='MSM')$infPeriod,
                           intLength=0.25, 
                           cases=c('base_case_alt','cd4_case'),
                           medWindows=subset(dataf, mode2=='MSM')$medWindows,
                           infPeriodOrig=subset(dataf, mode2=='MSM')$infPeriod)
    cd4real.nonMSM <- estimateTID(subset(dataf, mode2!='MSM')$infPeriod,
                           intLength=0.25, 
                           cases=c('base_case_alt','cd4_case'),
                           medWindows=subset(dataf, mode2!='MSM')$medWindows,
                           infPeriodOrig=subset(dataf, mode2!='MSM')$infPeriod)
    Sx_tab <- summary(cd4real, times=c(1,5), 
                      intLength=0.25)[,c(1,3,5)]
    Sx_tab2 <- summary(cd4real.MSM, times=c(1,5), 
                      intLength=0.25)[,c(1,3,5)]
    Sx_tab3 <- summary(cd4real.nonMSM, times=c(1,5), 
                      intLength=0.25)[,c(1,3,5)]
    Sx_tab <- data.frame(Pop=c('All', rep('', nrow(Sx_tab)-1),
                               'MSM', rep('', nrow(Sx_tab)-1),
                               'non-MSM', rep('', nrow(Sx_tab)-1)),
                         rbind(Sx_tab, Sx_tab2, Sx_tab3))
    colnames(Sx_tab) <- c('Population', 'Time Since Infection', 
                          'Base Case', 'CD4 Case')
    print(xtable(Sx_tab,
                 caption='Base Case versus CD4 Case TIDs',
                 label='tab:cd4real_tab',
                 digits=2),
          caption.placement='top',
          table.placement='ht',
          size='small',
          include.rownames=FALSE)

```

Project Goal
========================================================

**To use CD4 data to _increase the precision_ of undiagnosed estimates from the testing history model** 

*Why* 
- Negative tests that are many years prior to diagnosis, i.e. "long infection windows", are not very informative regarding time of infection
- CD4 at diagnosis can indicate recency of infection

*How*
- From literature, identify typical times to infection for various CD4 counts
- Use this to update the probability of infection within long infection windows

*Impact in WA*
- Our pre-analysis of CD4 measurements in WA indicates that using CD4 will increase the precision of our undiagnosed estimates but will not significantly change the estimated number of undiagnosed cases
- The main impact of integrating CD4 will be to increase our confidence in the estimates 

Reminder: the testing history method
========================================================
type:sub-section

Base Case distributes probability uniformly across the infection window
========================================================
_The hazard (instantaneous rate) of infection at any point within the window is 1/(window length), shown by the red line for two different window lengths. Time=0 refers to time of diagnosis._ 
```{r, include=TRUE, echo=FALSE, fig.width=8, fig.height=3.5, dpi=300, out.width='1920px'}

plot.BC <- function(maxWindow,
                    xmax=18, 
                    ymax=NULL,
                    extra.ticks=NULL, t='',
                    shading=NULL,
                    ...){
  x <- seq(0,maxWindow,by=0.1)
  y <- rep(1/maxWindow,length.out=length(x))
  if (is.null(ymax)) ymax=2*max(y)
  plot(0:xmax, seq(0,ymax,length.out=xmax+1), type='n', 
       xlab='Infection window (in years prior to dx)', 
       ylab='Hazard of infection', 
       bty='l', xaxt='n', yaxt='n',
       main=t)
  lines(x, y, type='l',xaxt='n', yaxt='n', col='red')
  if (!is.null(extra.ticks)) xticks=c(0,extra.ticks,xmax) else xticks=c(0,xmax)
  axis(side=1, at=xticks)
  if (!is.null(shading)) {
    xcord=c(0,0,shading, shading)
    ycord=c(0,y[1],y[1],0)
    polygon(xcord,ycord,col='gray',border=FALSE)
  }
}

par(mfrow=c(1,2))
plot.BC(2,xmax=4,ymax=2,t='Window=2 years')
plot.BC(4,xmax=4,ymax=2,t='Window=4 years')
```
The red line is lower when the window is longer, since the probability of infection is spread out over a longer time period.

Longer windows have less probability assigned to the recent period
========================================================
_Cumulative probability of diagnosis is the area under the curve. At 1 year prior to diagnosis, for example, the 2-year window assigns greater probability of infection than the 4-year window._ 
```{r, include=TRUE, echo=FALSE, fig.width=8, fig.height=3.5, dpi=300, out.width='1920px'}

par(mfrow=c(1,2))
plot.BC(2,xmax=4,ymax=2,t='Window=2 years',shading=1,extra.ticks=1)
plot.BC(4,xmax=4,ymax=2,t='Window=4 years',shading=1,extra.ticks=1)

```

Since 1 year is 1/2 of 2 years, 50% of infection probability occurs within 1 year for the 2-year window. In contrast, only 1/4 of 25% of infection probability occurs within 1 year for the 4-year window.

Never-tester assumption gives a window of age-16 or 18 years
========================================================

**For never-testers, we assume a window of 18 years or age-16, whichever is smaller.**

_Example of windows for never-testers of different ages_
```{r, include=TRUE, echo=FALSE, fig.width=8, fig.height=3.5, dpi=300, out.width='1920px'}

par(mfrow=c(1,2))
plot.BC(4,xmax=18,ymax=2,t='Never-tester, aged 20', extra.ticks=4)
plot.BC(18,xmax=18,ymax=2,t='Never-tester, aged 40', extra.ticks=4)

```

The age distribution of never-testers thus influences what window lengths they contribute to the population TID (time from infection to diagnosis).

Reminder: testing histories in WA, 2005-2014
========================================================
type:sub-section

59% of cases have testing history (2005-2014)
========================================================

**Testing histories = Tested + Never Tested**

_Breakdown of testing histories in WA HIV cases 2005-2014._
```{r everHad, include=TRUE, echo=FALSE, fig.width=8, fig.height=2.5, dpi=300, out.width='1920px'}

# Window distribution
everHadDistr<- with(dataf, table(mode2, everHad))
everHadDistr2 <- with(dataf, table(everHadNegTest))
wd <- data.frame(t(everHadDistr))
wd <- rbind(wd,
            data.frame(mode2='Total', 
                       ddply(wd, .(everHad), 
                             summarise, Freq=sum(Freq))))

# Figure advice: http://stackoverflow.com/questions/22231124/how-to-draw-stacked-bars-in-ggplot2-that-show-percentages-based-on-group

# Calculate the percentages
wd = ddply(wd, .(mode2),
                     transform,
                     Percent = round(100*Freq/sum(Freq)))

# Format the labels and calculate their positions
wd = ddply(wd, .(mode2), transform, pos = (cumsum(Freq) - 0.5 * Freq))
wd$label = paste0(sprintf("%.0f", wd$Percent), "%")

# Plot
ggplot(subset(wd, mode2=='Total'), aes(x = factor(mode2), y = Freq, fill = everHad)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 4) +
   coord_flip() + theme(text = element_text(size=15)) + 
   scale_x_discrete(name='', label='', breaks='') + 
   scale_y_continuous('Number of cases') +
geom_label(aes(y=pos, fill = everHad, label=everHad), colour = "white", fontface = "bold", vjust=-1) + theme_bw() + guides(fill=FALSE)


```

Total N=5148 <br>
N with testing history N=3016.

43% of non-MSM have testing histories, versus 66% of MSM
========================================================
_Testing history breakdown by MSM status. Percents are within MSM status group. Total N=5148._

```{r everHadbyMSM, echo=FALSE, fig.width=8, fig.height=3, dpi=300, out.width='1920px'}

ggplot(subset(wd, mode2!='Total'), aes(x = factor(mode2), y = Freq, fill = everHad)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 4) +
   coord_flip() + theme(text = element_text(size=15)) + 
   scale_x_discrete(name='') + 
   scale_y_continuous('Number of cases') + theme_bw() +
  theme(legend.title=element_blank())

```

MSM comprise about 2/3 of cases.<br>
What is driving differential response rates?

Half the windows are 2 years or shorter
========================================================
_Distribution of infection window lengths in years (N=3016). Labels indicate bounds, e.g. (0,1] includes windows>0 and <=1. The 18-year windows imputed because of the assumption for never-testers are labeled as 18 (NT)._

```{r wd, echo=FALSE, fig.width=8, fig.height=2.5, dpi=300, out.width='1920px'}

# Categorize window lengths
dataf <- transform(dataf, 
                   infPeriodLength=cut(infPeriod, breaks=c(0,1,2,5,18)))
dataf <- within(dataf, {
  infType=as.character(infPeriodLength)
  infType=ifelse(is.na(infType), infType, paste(infType, 'yrs'))
  infType[!is.na(infPeriod) & infPeriod>17.9 & everHad=="Never Tested"] <- 
    "18 yrs (NT)"
})

# It worked correctly
# with(dataf, table(everHadNegTest, infPeriodLength, useNA='ifany'), useNA='ifany')

# Window distribution
windowDistr <- with(dataf, table(mode2, infType))
windowDistr2 <- with(dataf, table(infType))
wd <- data.frame(t(windowDistr))
wd <- rbind(wd,
            data.frame(mode2='Total', 
                       ddply(wd, .(infType), 
                             summarise, Freq=sum(Freq))))

# Figure advice: http://stackoverflow.com/questions/22231124/how-to-draw-stacked-bars-in-ggplot2-that-show-percentages-based-on-group

# Calculate the percentages
wd = ddply(wd, .(mode2),
                     transform,
                     Percent = round(100*Freq/sum(Freq)))

# Format the labels and calculate their positions
wd = ddply(wd, .(mode2), transform, pos = (cumsum(Freq) - 0.5 * Freq))
wd$label = paste0(sprintf("%.0f", wd$Percent), "%")

# Plot
ggplot(subset(wd, mode2=='Total'), aes(x = factor(mode2), y = Freq, fill = infType)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 4) +
   coord_flip() + theme(text = element_text(size=15)) + 
   scale_x_discrete(name='') + 
   scale_y_continuous('Number of cases') +
  geom_label(aes(y=pos, fill=infType, label=infType), colour = "white", fontface = "bold", vjust=-1.5) + theme_bw() + guides(fill=FALSE)
```

50% have windows between 0 and 2 years (red plus gold). Our assumption for never-testers almost doubles the number of windows >=5 years (blue plus purple).

More than half of non-MSM windows are over 5 years
========================================================
_Distribution of infection window lengths for non-MSM (top) and MSM. Percents are within MSM status groups._

```{r wd-MSM, echo=FALSE, fig.width=8, fig.height=3, dpi=300, out.width='1920px'}
ggplot(subset(wd, mode2!='Total'), aes(x = factor(mode2), y = Freq, fill = infType)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 2.75) +
   coord_flip() + theme(text = element_text(size=15)) + 
   scale_x_discrete(name='') + 
   scale_y_continuous('Number of cases') +
  theme_bw()
```

The 18-year assumption for never-testers is almost 4x more common among non-MSM (31%) than among MSM (7%).

Longer non-MSM windows reflect more concurrent dx
========================================================
_Percent of cases with a concurrent AIDS diagnosis at time of HIV diagnosis, by MSM status._
```{r , echo=FALSE, fig.width=8, fig.height=3, dpi=300, out.width='1920px'}
# Window distribution
aidsDistr <- with(dataf, table(mode2, aidsAtDx))
aidsDistr2 <- with(dataf, table(aidsAtDx))
wd <- data.frame(t(aidsDistr))
wd <- rbind(wd,
            data.frame(mode2='Total', 
                       ddply(wd, .(aidsAtDx), 
                             summarise, Freq=sum(Freq))))

# Figure advice: http://stackoverflow.com/questions/22231124/how-to-draw-stacked-bars-in-ggplot2-that-show-percentages-based-on-group

# Calculate the percentages
wd = ddply(wd, .(mode2),
                     transform,
                     Percent = round(100*Freq/sum(Freq)))

# Format the labels and calculate their positions
wd = ddply(wd, .(mode2), transform, pos = (cumsum(Freq) - 0.5 * Freq))
wd$label = paste0(sprintf("%.0f", wd$Percent), "%")

# Plot
ggplot(subset(wd, mode2!='Total'), aes(x = factor(mode2), y = Freq, fill = aidsAtDx)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 2.75) +
   coord_flip() + theme(text = element_text(size=15)) + 
   scale_x_discrete(name='') + 
   scale_y_continuous('Number of cases') +
  theme_bw()
```

Longer non-MSM windows also reflect older never-testers
========================================================
_Age distribution of never-testers in WA 2005-2015, by MSM status (pink=MSM)._
```{r , echo=FALSE, fig.width=8, fig.height=3, dpi=300, out.width='1920px'}
# Mean age
meanAge <- ddply(subset(dataf, everHad=='Never Tested'), .(mode2), summarise, meanAge=mean(hdx_age))
# Plot
ggplot(dataf, aes(hdx_age, fill = mode2)) +
   geom_bar(position='dodge') + theme_bw() +
   scale_x_continuous(name='Age at diagnosis') + 
   scale_y_continuous(name='') +
  theme_bw()
```
Mean age at diagnosis among never-testers is 42 in non-MSM, versus 36 in MSM <br>
Remember the assumption for never-testers: window=min(age-16,18). Cases older than 16+18=34 will all have 18-year windows.

In WA, non-MSM are where precision can be increased
========================================================
**Whether it's using BED, CD4, or concurrent AIDS dx, etc**
- Short testing intervals in MSM = low uncertainty regarding time of infection

**Increasing precision will not necessarily decrease undiagnosed estimates**
- More precise estimates will deviate from the Base Case inasmuch as the additional information changes the probability of infection within the window

**Total population estimates will not change greatly, but our confidence in them will increase**
- Non-MSM are only 1/3 of the sample
- Non-MSM estimates will change more than MSM estimates

Methods: integrating CD4 into the testing history method
========================================================
type: sub-section

Under Base Case, long windows = low probability of recent infection
========================================================

Window Length | If CD4 unknown, infection probability is mostly:
---- | ----------------------------------
Short  | Recent  
Long  | Non-recent  

Long window but high CD4 indicates a higher likelihood of recent infection
========================================================

Window Length | If CD4 unknown, infection probability is mostly: | CD4=Low | CD4=High
---- | ---------------------------------- | ----------| -------------------
Short | Recent | Recent (fast progressor?) | Recent
Long  | Non-recent  | Non-recent | **Recent**

_How to define "short" and "long", "low" and "high"?_

Median times to CD4 from the literature
========================================================

```{r,echo=FALSE}
# Cori transition model: median times in each bin are:
#times <- log(2)*c(3.32, 2.70, 5.50,5.06)
#sum(times)
``` 
**Years it takes for 50% of cases to reach CD4 level:**

CD4 Category | Lodi 2011 | Cori 2015 | Our approximation^* 
-------------|-------------|---------| ---------
>500 | 1.19 | 2.3 | 1.5
350-500 | 4.19 | 4.17 | 4
200-350 | 7.93 | 7.98 | 8
0-200 | | 11.5 | 9

<p style="font-size:30px">
* Simplified median times that are consistent with both sources. For CD4 0-200, we will retain our maximum-window assumption of 18 years. This sets a maximum median time of 9 years
</p>

**Interpretation**: 50% of infection probability should occur within the median time. <br><br>
**Implication**: If a case has CD4>500 at diagnosis, for example, we expect 50% of his infection probability to occur in the 1.5 years prior to dx

<p style="font-size:20px">Lodi S, Phillips A, Touloumi G, Geskus R, Meyer L, Thiébaut R, et al. Time from human immunodeficiency virus seroconversion to reaching CD4+ cell count thresholds <200, <350, and <500 Cells/mm3: assessment of need following changes in treatment guidelines. Clin Infect Dis Off Publ Infect Dis Soc Am. 2011 Oct;53(8):817–25
<br><br>
Cori A, Pickles M, van Sighem A, Gras L, Bezemer D, Reiss P, et al. CD4+ cell dynamics in untreated HIV-1 infection: overall rates, and effects of age, viral load, sex and calendar time. AIDS Lond Engl. 2015 Nov 28;29(18):2435–46.
</p>


Strategy: re-allocate infection probability given CD4 at diagnosis
========================================================

**Base Case**: 50% infection probability is in each half of the window

_In the example of a window of 18 years, 50% probability of infection is spread across years 0-9 prior to dx_
```{r, include=TRUE, echo=FALSE, fig.width=8, fig.height=3.5, dpi=300, out.width='1920px'}

par(mfrow=c(1,1))
plot.BC(18,xmax=18,ymax=0.25,t='Window=18 years',shading=9,extra.ticks=9)

```


Strategy: re-allocate infection probability given CD4 at diagnosis
========================================================

**CD4 Case**: 50% of infection probability is shifted into the CD4-based median window

_For a window of 18 years and various CD4 bins at diagnosis, the graphs show the Base Case (red) versus CD4 Case (blue) distribution of the probability of infection within the window. Shading indicates the new placement of 50% of infection probability._
```{r, include=TRUE, echo=FALSE, fig.width=8, fig.height=3.5, dpi=300, out.width='1920px'}

plot.CD4 <- function(...){
  args <- list(...)
  med <- args$median
  plot.BC(...)
  x1=c(0,med)
  x2=c(med,args$maxWindow)
  y1=rep(0.5/med,2)
  y2=rep(0.5/diff(x2),2)
  if ((args$shading.median)) {
    xcord=c(0,0,med, med)
    ycord=c(0,y1[1],y1[1],0)
    polygon(xcord,ycord,col='gray',border=FALSE)
  }
  lines(c(x1,x2),c(y1,y2),col='blue')
  x <- seq(0,args$maxWindow,by=0.1)
  y <- rep(1/args$maxWindow,length.out=length(x))
  lines(x, y, type='l',xaxt='n', yaxt='n', col='red')
}

par(mfrow=c(1,3))
plot.CD4(maxWindow=18,xmax=18,ymax=0.4,t='CD4>500 (median=1.5 yrs)',extra.ticks=1.5,median=1.5,shading.median=TRUE)
plot.CD4(maxWindow=18,xmax=18,ymax=0.4,t='CD4 350-500 (median=4 yrs)',extra.ticks=4,median=4,shading.median=TRUE)
plot.CD4(maxWindow=18,xmax=18,ymax=0.4,t='CD4 200-350 (median=8 yrs)',extra.ticks=8,median=8,shading.median=TRUE)

```



Impact will come from high CD4s in people with "long" windows
========================================================

CD4 Category | CD4 Median | Impacts windows longer than 
-------------| --------- | ----------------------------
>500 | 1.5 | 3
350-500 | 4 | 8
200-350 | 8 | 16

**Degree of impact will depend on how much longer windows are than 2x the CD4-based median** 
* 18-year windows among individuals with CD4>500 will provide much greater impact than 4-year windows, for example
* Even 18-year windows will have minimal impact among CD4 200-350, since the Base Case median for 18-year windows is 9 years and the CD4-based median is 8 years (not much difference)

Results: CD4 in WA cases
========================================================
type: sub-section

72% of cases with testing history also have useable CD4 data
========================================================
```{r, include=TRUE, echo=FALSE, fig.width=8, fig.height=3.5, dpi=300, out.width='1920px'}

df28 <- subset(dataf,!is.na(everHadNegTest) & !cd4within30)
df28 <- transform(df28, cd4_days_cat=cut(cd4_days,breaks=c(0,30,60,3500)))
#summary(df28$firstcd4cnt, useNA='ifany')
#with(df28, table(cd4cat, cd4_days_cat, useNA='ifany'))
#with(df28, plot(cd4_days, firstcd4cnt))
d = ddply(df28, .(cd4cat, cd4_days_cat, infBreaks), summarise, N=length(cd4cat))
subset(d, cd4_days_cat=='(30,60]')
```

CD4 measured within 30 days (add a plot?)

Low CD4 is correlated with long windows, but high variability
========================================================
_Scatterplot of first CD4 count versus infection window length, among CD4-eligible cases (N=2178). Panels are testing status (columns) and MSM status (rows)._ 
```{r, echo=FALSE, fig.width=10, fig.height=4, dpi=300, out.width='1920px', cache=FALSE}

#with(dataf, plot(firstcd4cnt[cd4within30], infPeriod[cd4within30]))
cd4scatter <- ggplot(subset(dataf, cd4within30), aes(x=infPeriod, y=firstcd4cnt)) + 
  geom_point() + facet_grid(mode2~everHad) + 
  theme_bw()
cd4scatter+ geom_smooth() + geom_rug(col=rgb(.5,0,0,alpha=.2))
# I added a rug plot to show densities. See here for marginal histograms. The
# tricky part would be the panels, I think.
# http://stackoverflow.com/questions/8545035/scatterplot-with-marginal-histograms-in-ggplot2
``` 
* Never testers get a window length of min(age-16, 18 years). <br>

Low CD4 and long windows both imply low probability of recent infection

Low CD4 is more common in never-testers than testers
========================================================
_CD4 distribution density by testing history status (colors) and MSM status (panels)._
```{r cd4veverHad, echo=FALSE, fig.width=10, fig.height=4, dpi=300, out.width='1800px', }

cd4dens <- ggplot(subset(dataf, !is.na(cd4_days) & cd4_days<=30 &
                !is.na(firstcd4cnt) & everHad!='Missing')) + 
  geom_density(aes(x=firstcd4cnt, group=everHad, 
                             colour=everHad, fill=everHad), fill=NA) +
  facet_grid(.~mode2) +
  theme_bw()
cd4dens

```
Never-testers have CD4 distributions that are much more skewed towards low CD4.

However, some never-testers do have high CD4
========================================================

_CD4 distributions by testing history status (panels) and MSM vs non-MSM status (colors)_
```{r cd4veverHad500, echo=FALSE, fig.width=10, fig.height=4, dpi=300, out.width='1800px', cache=FALSE}
cd4dens+ geom_vline(xintercept=500, colour='black')
```

Never-testers with high CD4 are where the CD4 Case will have greatest impact


10% of cases have CD4 indicating a more recent infection than Base Case assumption
========================================================

```{r, echo=FALSE, fig.width=10, fig.height=6, dpi=300, out.width='1920px', cache=FALSE}

cd4vinf <- with(subset(dataf, cd4within30), table(infBreaks, cd4cat))

ggMMplot(dataf$infBreaks, dataf$cd4cat,
         toplabs=c('A%', 'B%', 'C%', 'D%'))


``` 


10% of cases have CD4 indicating more recent infection probability than Base Case assumes
========================================================

CD4 Category | CD4 Median | Impacts windows longer than
-------------| --------- | ---------------------------
>500 | 1.5 | 3
350-500 | 4 | 8
200-350 | 8 | 16

```{r, echo=FALSE, fig.width=8, fig.height=4, dpi=300, out.width='1500'}

dataf <- within(dataf, {
  cd4cat=as.character(cd4cat)
  cd4cat[!cd4within30]<-NA
  cd4cat[is.na(cd4cat)]<-'No CD4 within 30d'
})
cd4vinf <- with(subset(dataf, everHad!='Missing'), table(infBreaks, cd4cat))

#http://stackoverflow.com/questions/20673584/visualizing-crosstab-tables-with-a-plot-in-r
# Create the data frame
df <- melt(as.data.frame(cd4vinf))
df <- transform(df, prop=round(100*value/sum(value)))
df$label <- paste0(sprintf("%.0f",
                           df$prop), 
                           "%")
df$dcolor <- 'No Impact'

infl <- levels(df$infBreaks)
cd4l <- levels(df$cd4cat)

df$dcolor[df$infBreaks==infl[4] & df$cd4cat%in%cd4l[2:4]] <- 'Impact'
df$dcolor[df$infBreaks==infl[3] & df$cd4cat%in%cd4l[3:4]] <- 'Impact'
df$dcolor[df$infBreaks==infl[2] & df$cd4cat%in%cd4l[4]] <- 'Impact'

df <- transform(df, cd4cat=factor(cd4cat, 
                                  levels=c(cd4l[c(5,1:4)]),
                                  labels=c(cd4l[c(5,1:4)]))
                )

# Investigate that large group - all have cd4_days>30 or NA
if (1==0) {
  weird <- subset(dataf, cd4within30==FALSE & !is.na(infPeriod) & infPeriod<3,
                  select=c('cd4_days', 'firstcd4cnt', 'infPeriod'))
  summary(weird$cd4_days)
}

#Plot the Data
g <- ggplot(df, aes(infBreaks, cd4cat)) + geom_point(aes(size = value, colour=dcolor)) + theme_bw() + xlab("Window Length") + ylab("CD4 Bin")
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = label)) +
  guides(size=FALSE) 
``` 

CD4 impacts 7% of MSM versus 17% of non-MSM
========================================================

```{r, echo=FALSE, fig.width=11, fig.height=5, dpi=300, out.width='1920px', cache=FALSE}

df2 <- ddply(subset(dataf,everHad!='Missing'), 
                 .(mode2, infBreaks, cd4cat), summarise, 
                 value=length(cd4cat))

#http://stackoverflow.com/questions/20673584/visualizing-crosstab-tables-with-a-plot-in-r
# Create the data frame
df2$prop=NA
df2 <- within(df2, {
  prop[mode2=='MSM'] <- round(100*value[mode2=='MSM']/sum(value[mode2=='MSM']))
  prop[mode2=='non-MSM'] <- round(100*value[mode2=='non-MSM']/sum(value[mode2=='non-MSM']))
})

df2$label <- paste0(sprintf("%.0f",
                           df2$prop), 
                           "%")
df2$dcolor <- 'No Impact'

#infl <- levels(df2$infBreaks)
#cd4l <- levels(df2$cd4cat)

df2$dcolor[df2$infBreaks==infl[4] & df2$cd4cat%in%cd4l[2:4]] <- 'Impact'
df2$dcolor[df2$infBreaks==infl[3] & df2$cd4cat%in%cd4l[3:4]] <- 'Impact'
df2$dcolor[df2$infBreaks==infl[2] & df2$cd4cat%in%cd4l[4]] <- 'Impact'

df2 <- transform(df2, cd4cat=factor(cd4cat, 
                                  levels=levels(df$cd4cat),
                                  labels=levels(df$cd4cat))
                )

#Plot the Data
g <- ggplot(df2, aes(infBreaks, cd4cat)) + geom_point(aes(size = value, colour=dcolor)) + theme_bw() + xlab("Window Length") + ylab("CD4 Bin")
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = label)) +
  guides(size=FALSE) + facet_grid(.~mode2)
``` 
Results: CD4 impact on median infection point 
========================================================
type: sub-section

Among impacted cases, median infection point decreases by 0.1-0.8 years
========================================================
Median infection point = time by with 50% of infection probability has occurred

_Among impacted cases (10% of all testing histories), median infection points under the Base Case (orange) and CD4 Case (green), by CD4 bin._
```{r, echo=FALSE, fig.width=11, fig.height=5, dpi=300, out.width='1920px', cache=FALSE}
rm(temp)
temp <- transform(dataf, 
                  cd4cat = factor(cd4cat, levels=rev(levels(factor(cd4cat))), 
                                  labels=rev(levels(factor(cd4cat)))))
tabMedDiff <- ddply(temp, .(cd4cat), summarise, 
      N_impacted=sum(impacted, na.rm=TRUE),
      Perc_CD4bin=100*sum(impacted)/length(impacted),
      avgOldMedian=round(mean(infPeriod/2, na.rm=TRUE),1),
      avgNewMedian=round(mean(medWindows, na.rm=TRUE),1),
      Difference=avgOldMedian-avgNewMedian)
colnames(tabMedDiff) <- c('CD4 Bin', 'Number Impacted', '% of CD4 Bin Impacted',
                   'Base Case Median', 
                   'CD4 Case Median', 'Difference')
tabMedDiff <- tabMedDiff[1:4,]

t = melt(tabMedDiff)
t1 = subset(t, variable%in%c('Base Case Median', 'CD4 Case Median') &
               `CD4 Bin`!='No CD4 within 30d')

#Plot the Data
g <- ggplot(t1, aes(`CD4 Bin`, y=value, fill=variable)) + geom_bar(position='dodge', stat='identity') + theme_bw()
g
``` 
_More details included in an appendix slide_

Median windows decrease more in the impacted non-MSM
========================================================
_Among impacted cases, median infection points by Case and MSM status. The impacted MSM are 7% of MSM testing histories, whereas the impacted non-MSM are 17% of all testing histories._
```{r, echo=FALSE, fig.width=11, fig.height=5, dpi=300, out.width='1920px', cache=FALSE}
tabMedDiffMSM <- ddply(temp, .(mode2, cd4cat), summarise, 
      N_impacted=sum(impacted, na.rm=TRUE),
      Perc_CD4bin=100*sum(impacted)/length(impacted),
      avgOldMedian=round(mean(infPeriod/2, na.rm=TRUE),1),
      avgNewMedian=round(mean(medWindows, na.rm=TRUE),1),
      Difference=avgOldMedian-avgNewMedian)
colnames(tabMedDiffMSM) <- c('Mode', 'CD4 Bin', 'Number Impacted', '% of CD4 Bin Impacted',
                   'Base Case Median', 
                   'CD4 Case Median', 'Difference')
tabMedDiffMSM <- tabMedDiffMSM[tabMedDiffMSM[,'CD4 Bin']!='No CD4 within 30d',]

t = melt(tabMedDiffMSM)
t1 = subset(t, variable%in%c('Base Case Median', 'CD4 Case Median') &
               `CD4 Bin`!='No CD4 within 30d')

#Plot the Data
g <- ggplot(t1, aes(`CD4 Bin`, y=value, fill=variable)) + geom_bar(position='dodge', stat='identity') + theme_bw() +
  facet_grid(.~Mode)
g
``` 
_More details included in an appendix slide_

Results: CD4 impact on TID estimate
========================================================
type: sub-section

CD4 Case decreases % undiagnosed at 1 year by 1-2 percentage points
========================================================

Population| % Undx at 1 year, Base Case | % Undx at 1 Year, CD4 Case | Difference | Relative Difference
----------| --------------------------- | ---------------------------| ---------- | -------
Total | 40.8 | 39.4 | 1.4 | 3.4%
MSM | 33.1 | 31.9 | 1.2 | 3.6%
non-MSM | 64.3 | 62.0 | 2.3 | 3.6%

Overall impact on TID is very subtle
========================================================

_TID S(x) graph for MSM and non-MSM_

Results: CD4 impact on undiagnosed estimates
========================================================
type: sub-section


Mean undiagnosed estimates decrease 5-6% in 2014
========================================================

Population | Base Case | CD4 Case | Difference | Percent Change
---------- | --------- | -------- | ---------- | --------------
Total | 1319.0 | 1247.0 | 72.0 | 5.5
MSM | 604.7 | 568.4 | 36.3 | 6.0
non-MSM | 714.3 | 678.2 | 36.1 | 5.1

Undiagnosed fractions decrease 0.5-0.7 percentage points in 2014
========================================================

Population | Base Case | CD4 Case | Absolute % Difference 
---------- | --------- | -------- | ---------- 
Total | 9.4 | 8.9 | 0.5
MSM | 6.2 | 5.8 | 0.4 
non-MSM | 17.1 | 16.4 | 0.7 

_In relative terms, the 0.7% decrease in non-MSM's undiagnosed fraction is 75% greater than the 0.4% in MSM._

Conclusions, limitations and possibilities
========================================================
type: sub-section

CD4 data indicate that most WA cases with long windows were not recently infected
========================================================

Window Length | If CD4 unknown, infection probability is mostly: | CD4=Low | CD4=High
---- | ---------------------------------- | ----------| -------------------
Short | Recent | Recent (fast progressor?) | Recent
Long  | Non-recent  | Non-recent | **Recent**


In WA, the C

Appendix: Slide Bank
========================================================
type: section

Reminder: 58% of cases have testing history
========================================================

```{r sampleTH, echo=FALSE, fig.width=10, fig.asp=0.5, out.width=1800, cache=TRUE}
bars <- c('Total', 'Testing History', 'Ever-Tested'
          )
          #,'Window <5 yrs', 'Window <2 yrs')
sample <- with(dataf, data.frame(
                Total=length(everHadNegTest),
                `Testing History`=sum(!is.na(everHadNegTest)),
                `Ever-Tested`=sum(everHadNegTest, na.rm=TRUE),
 #               `Window <5 yrs`=sum(infPeriod<=5, na.rm=TRUE),
  #              `Window <2 yrs`=sum(infPeriod<=2, na.rm=TRUE),
                check.names=FALSE))
sample <- melt(sample)
sample <- transform(sample, 
                    variable=factor(variable,
                                    levels=bars,
                                    labels=bars))

# Calculate the percentages
sample = ddply(sample, .(variable),
                     transform,
                     Percent = round(100*value/nrow(dataf)))

# Format the labels and calculate their positions
sample = ddply(sample, .(variable), transform, pos = (value + nrow(dataf)*0.03))
sample$label = paste0(sprintf("%.0f", sample$Percent), "%")

# Plot
ggplot(sample, aes(x = variable, y = value)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 4) +
   theme(text = element_text(size=15),
         axis.text.x = element_text(angle=0)) + 
   scale_x_discrete(name='') + 
   scale_y_continuous('Number of cases') + theme_bw()
```

Among testing histories, 79% report have a prior negative test
========================================================
```{r sample, echo=FALSE, fig.width=10, fig.asp=0.5, out.width=1800, cache=TRUE}
bars <- c('Testing History', 'Ever-Tested', 'Window <5 yrs', 'Window <2 yrs')
sample <- with(dataf, data.frame(
                `Testing History`=sum(!is.na(everHadNegTest)),
                `Ever-Tested`=sum(everHadNegTest, na.rm=TRUE),
                `Window <5 yrs`=sum(infPeriod<=5, na.rm=TRUE),
                `Window <2 yrs`=sum(infPeriod<=2, na.rm=TRUE),
                check.names=FALSE))
sample <- melt(sample)
sample <- transform(sample, 
                    variable=factor(variable,
                                    levels=bars,
                                    labels=bars))

# Calculate the percentages
sample = ddply(sample, .(variable),
                     transform,
                     Percent = round(100*value/sum(!is.na(dataf$everHadNegTest))))

# Format the labels and calculate their positions
sample = ddply(sample, .(variable), transform, pos = (value + sum(!is.na(dataf$everHadNegTest))*0.03))
                                                    
sample$label = paste0(sprintf("%.0f", sample$Percent), "%")

# Plot
ggplot(sample, aes(x = variable, y = value)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 4) +
   theme(text = element_text(size=15),
         axis.text.x = element_text(angle=0)) + 
   scale_x_discrete(name='') + 
   scale_y_continuous('Number of cases') + theme_bw()
```

Testing histories come disproportionately from MSM
========================================================
MSM are `r round(100*table(dataf$mode2)/nrow(dataf),0)['MSM']`% of all cases.

```{r sampleByMSM, echo=FALSE, fig.width=10, fig.asp=0.5, out.width=1800, cache=TRUE}
bars <- #c('Total', 
          c('Testing History', 'Ever-Tested', 'Window <5 yrs', 'Window <2 yrs')
sample <- ddply(dataf, .(mode2), summarise, 
#                Total=length(everHadNegTest),
                `Testing History`=sum(!is.na(everHadNegTest)),
                `Ever-Tested`=sum(everHadNegTest, na.rm=TRUE),
                `Window <5 yrs`=sum(infPeriod<=5, na.rm=TRUE),
                `Window <2 yrs`=sum(infPeriod<=2, na.rm=TRUE))
sample <- melt(sample)
sample <- transform(sample, 
                    variable=factor(variable,
                                    levels=bars,
                                    labels=bars))

# Calculate the percentages
sample = ddply(sample, .(variable),
                     transform,
                     Percent = round(100*value/sum(value)))

# Format the labels and calculate their positions
sample = ddply(sample, .(variable), transform, pos = (cumsum(value) - 0.5 * value))
sample$label = paste0(sprintf("%.0f", sample$Percent), "%")

# Plot
ggplot(sample, aes(x = variable, y = value, fill = mode2)) +
   geom_bar(stat = "identity", width = .7) +
   geom_text(aes(y = pos, label = label), size = 4) +
   theme(text = element_text(size=15),
         axis.text.x = element_text(angle=0)) + 
   scale_x_discrete(name='') + 
   scale_y_continuous('Number of cases')
```


Recall that never-testers get a window that is either age-16 or 18 years. 


Among impacted cases, median infection point decreases by 0.1-0.8 years
========================================================

Median infection point = time prior to dx within which 50% of infection probability occurs
```{r, echo=FALSE, results='asis', cache=FALSE}
print(xtable(tabMedDiff, digits=1), type='html', include.rownames=FALSE)
```

The impacted cases represent (172+66+58)/3016 = 10% of the cases contributing testing histories.

Median windows decrease more in non-MSM
========================================================

```{r, echo=FALSE, results='asis', cache=FALSE}
print(xtable(tabMedDiffMSM, digits=1), type='html', include.rownames=FALSE)
```

